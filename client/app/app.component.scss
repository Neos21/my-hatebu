@import '~bootstrap/scss/_functions';
@import '~bootstrap/scss/_mixins';
@import '~bootstrap/scss/_variables';


// 変数
// --------------------------------------------------------------------------------

$theme-bg-colour: #008fde;
$theme-colour: #fff;

$header-height: 50px;
$menu-width: 270px;

$menu-transition: .2s;


// 全体
// --------------------------------------------------------------------------------

a {
  color: $theme-colour;
  text-decoration: none;
  
  &:hover {
    color: darken($theme-colour, 10%);
  }
}


// ヘッダ
// --------------------------------------------------------------------------------

.header {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: $header-height;
  background: $theme-bg-colour;
  box-shadow: 0 0 10px 0 rgba(0, 0, 0, .3);
  z-index: 99980;  // .menu・.menu-bg より下
  
  // ハンバーガメニュー
  .hamburger {
    position: absolute;
    width: auto;
    top: 0;
    left: 0;
    height: $header-height;
    padding: 0 1rem;
    border: 0;
    background: $theme-bg-colour;
    overflow: hidden;
    opacity: 1;
    transition: opacity $menu-transition, visibility $menu-transition;
    outline: 0;
    cursor: pointer;
    
    // 幅が広い時は非表示にする
    @include media-breakpoint-up(lg) {
      & {
        opacity: 0;
        visibility: hidden;
      }
    }
    
    &:hover {
      .icon-bar {
        background: darken($theme-colour, 10%);
      }
    }
    
    .icon-bar {
      display: block;
      width: 25px;
      height: 2px;
      background: $theme-colour;
    }
    
    .icon-bar + .icon-bar {
      margin-top: 5px;
    }
  }
  
  .page-title {
    margin: 0;
    color: $theme-colour;
    font-size: 1.15rem;
    font-weight: bold;
    text-align: center;
    line-height: $header-height;
    transition: padding-left $menu-transition;
    
    @include media-breakpoint-up(lg) {
      padding-left: $menu-width;
    }
  }
  
  .site-title {
    position: absolute;
    top: calc(#{$header-height} / 2);
    right: 0;
    border: 0;
    padding-right: .75rem;
    color: $theme-colour;
    text-align: right;
    font-size: .9rem;
    line-height: 1.25;
    background: $theme-bg-colour;
    overflow: hidden;
    transform: translateY(-50%);
    outline: 0;
    cursor: pointer;
    
    &:hover {
      color: darken($theme-colour, 10%);
    }
  }
}


// メニュー
// --------------------------------------------------------------------------------

.menu {
  position: fixed;
  top: 0;
  left: calc(-#{$menu-width} - 10px);  // メニューの幅の分だけネガティブ指定して画面外に出しておく
  width: $menu-width;
  height: 100%;
  background: $theme-bg-colour;
  box-shadow: 0 0 10px 0 rgba(0, 0, 0, .3);
  transition: left $menu-transition;
  z-index: 99999;  // .header よりも上
  -webkit-touch-callout: none;  // iOS で長押ししてもポップアップメニューを開かせない
  
  // iOS でスクロールしなかったので子要素でスクロールさせる
  div {
    height: 100%;
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
  }
  
  ul {
    margin: .5rem 0 60px;
    padding: 0;
    list-style: none;
    color: darken($theme-colour, 12.5%);
    
    ul {
      margin: 0 0 .25rem;
      padding-left: 1rem;
    }
    
    button {
      display: block;
      width: 100%;
      border: 0;
      padding: .05rem .75rem;
      color: darken($theme-colour, 12.5%);
      text-align: left;
      background: transparent;
      cursor: pointer;
      outline: 0;
      
      &.active,
      &:hover {
        color: $theme-colour;
        font-weight: bold;
        text-shadow: $theme-colour 0 0 10px;
      }
    }
    
    span {
      display: block;
      padding: 0 1rem;
    }
  }
}

// ハンバーガメニューが表示される時はメニューを閉じておく
@include media-breakpoint-up(lg) {
  .menu {
    left: 0;
  }
}

// 本コンポーネントより親の要素 (body 要素) に .show-menu が付与された時にメニューを表示するようにする
:host-context(.show-menu) .menu {
  left: 0;
}

// メニュー背景に置く閉じるための半透明背景ボタン
.menu-bg {
  display: none;
  
  span {
    visibility: hidden;
  }
}

:host-context(.show-menu) .menu-bg {
  display: block;
  position: fixed;
  top: 0;
  left: 0;
  border: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, .5);
  z-index: 99990;  // .menu より下・.header より上
  outline: 0;
  cursor: pointer;
  
  // 画面幅が広い場合は表示させない
  @include media-breakpoint-up(lg) {
    display: none;
  }
}


// コンテンツ
// --------------------------------------------------------------------------------

.contents {
  margin-left: 0;  // メニュー非表示時のコンテンツ表示状態にする
  padding: calc( #{$header-height} + 1rem ) .5rem 1rem;
  transition: margin-left $menu-transition;
  z-index: 1;
  
  // メニュー表示時はメニュー幅分の余白を開ける
  @include media-breakpoint-up(lg) {
    margin-left: $menu-width;
    padding-right: 1rem;
    padding-left: 1rem;
  }
}
